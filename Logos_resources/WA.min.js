function updateTimelines(e, t) { if (e.movieRunning) { e.sceneTimer += t, e.movieTimer += t; for (var n = 0; n < e.activeTimelines.length; n++) { var i = e.activeTimelines[n]; e.activeTimelineTimers[i] += t; var r = e.getTimelineIndexForId(i); e.debug && ($("#sceneTimer").html(e.sceneTimer), $("#movieTimer").html(e.movieTimer), $("#sceneInfo").html(e._currentScene.Name + " (" + e._currentScene.Oid + ")"), $("#timelineInfo").html(e._currentScene.Timelines[e._currentTimelineIndex].Name + " (" + e._currentScene.Timelines[e._currentTimelineIndex].Oid + ")")); var o = e._currentScene.SceneEnd; e.sceneTimer == o && e.handleEvent(); var s = e._currentScene.Timelines[r].Transitions; for (var c in s) { var a = s[c].ObjectId; if (s[c].StartTime == e.activeTimelineTimers[i]) { var u = s[c].TransitionElements, d = $("#" + a), h = $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Duration), l = $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.TimingFunc), p = $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Delay), f = $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Property); "all" == f || "" == f || void 0 === f ? (h = "", l = "", p = "", f = "") : (h += ",", l += ",", p += ",", f += ","); for (var m in u) h += u[m].Duration + ",", l += u[m].TimingFunc + ",", p += u[m].Delay + ",", f += e.transitionPropertyMapping[u[m].Property] + ","; h = h.substr(0, h.length - 1), l = l.substr(0, l.length - 1), p = p.substr(0, p.length - 1), f = f.substr(0, f.length - 1), $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Duration, h), $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.TimingFunc, l), $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Delay, p), $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Property, "all"); for (var S in u) if ("TextShadow" == u[S].Property || "BoxShadow" == u[S].Property) { var g = e.handleShadow(u[S].ShadowProperties); $(d).css(e.transitionPropertyMapping[u[S].Property], g) } else e[u[S].Property](d, u[S].EndValue) } } var v = e._currentScene.Timelines[r].Transforms; for (var O in v) { var b = v[O].ObjectId; if (v[O].StartTime == e.activeTimelineTimers[i]) { h = "", l = "", p = ""; var w = "", T = v[O].TransformElements; d = $("#" + b), $(d).css("left"); for (var P in T) h += T[P].Duration + ",", l += T[P].TimingFunc + ",", p += T[P].Delay + ","; h = h.substr(0, h.length - 1), l = l.substr(0, l.length - 1), p = p.substr(0, p.length - 1), $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Duration, h), $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.TimingFunc, l), $(d).css(e.getCSSPrefix() + e.animationPropertyMapping.Delay, p); for (var S in T) w += " " + e[T[S].Property](T[S].EndValue); e.log(w), $(d).css(e.getCSSPrefix() + "transform", w) } } var B = e._currentScene.Timelines[r].Changes; for (var M in B) { b = B[M].ObjectId; if (B[M].StartTime == e.activeTimelineTimers[i]) { var k = B[M].ChangeElements; d = $("#" + b); for (var S in k) if ("Background" == k[S].Property) { var x = e.handleBackground(k[S].BackgroundProperties); $(d).css("background-image", x) } else if ("Reflection" == k[S].Property) { var y = e.handleReflection(k[S].ReflectionProperties); $(d).css("-webkit-box-reflect", y) } else e[k[S].Property](d, k[S].EndValue) } } var C = e._currentScene.Timelines[r].Events; for (var S in C) { if (C[S].StartTime == e.sceneTimer) { var I = C[S].FunctionId; e.custom[I]() } } } } setTimeout(function () { updateTimelines(e, t) }, t) } function removeSceneFromDOM(e) { $("#" + e).remove() } function flipScenes(e, t, n, i) { switch (t) { case "instant": null == e._currentScene ? (e._currentScene = e._nextScene, e._nextScene = null, $("#" + e._currentScene.Oid).css("display", "block"), resetSceneTimer(e), e.registerMouseEventsForScene(e._currentScene), e.registerMouseEventsForWebObjects(e._currentScene), e.startScene(e.tickIntervall, e._currentScene.Autostart), e.startMovie()) : ($("#" + e._currentScene.Oid).remove(), e._currentScene = e._nextScene, e._nextScene = null, $("#" + e._currentScene.Oid).css("display", "block"), resetSceneTimer(e), resetTimelines(e), e.registerMouseEventsForScene(e._currentScene), e.registerMouseEventsForWebObjects(e._currentScene), e.startScene(e.tickIntervall, e._currentScene.Autostart)); break; case "fade": if (null == e._currentScene) { e._currentScene = e._nextScene, e._nextScene = null; var r = i / 1e3 + "s", o = $("#" + e._currentScene.Oid); $(o).css("opacity", 0), $(o).css("display", "block"), setTimeout(function () { $(o).css(e.getCSSPrefix() + "transition-property", "opacity"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("opacity", 1) }, 100), setTimeout(function () { resetSceneTimer(e), e.registerMouseEventsForScene(e._currentScene), e.registerMouseEventsForWebObjects(e._currentScene), e.startScene(e.tickIntervall, e._currentScene.Autostart), e.startMovie() }, i) } else { r = i / 1e3 + "s"; if (e._currentScene.Oid == e._nextScene.Oid) { var s = $("#" + e._currentScene.Oid + ":nth-child(1)"); o = $("#" + e._currentScene.Oid + ":nth-child(2)") } else s = $("#" + e._currentScene.Oid), o = $("#" + e._nextScene.Oid); $(o).css("opacity", 0), $(o).css("display", "block"), setTimeout(function () { $(s).css(e.getCSSPrefix() + "transition-property", "opacity"), $(s).css(e.getCSSPrefix() + "transition-duration", r), $(o).css(e.getCSSPrefix() + "transition-property", "opacity"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(s).css("opacity", 0), $(o).css("opacity", 1) }, 100), setTimeout(function () { resetSceneTimer(e), resetTimelines(e), removeSceneFromDOM(e._currentScene.Oid), e._currentScene = e._nextScene, e._nextScene = null, e.registerMouseEventsForScene(e._currentScene), e.registerMouseEventsForWebObjects(e._currentScene), e.startScene(e.tickIntervall, e._currentScene.Autostart) }, i) } break; case "slide": if (null == e._currentScene) { e._currentScene = e._nextScene, e._nextScene = null; r = i / 1e3 + "s", o = $("#" + e._currentScene.Oid); $(o).css("display", "block"), "left" == n ? ($(o).css("left", e.stageWidth + "px"), setTimeout(function () { $(o).css(e.getCSSPrefix() + "transition-property", "left"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("left", "0px") }, 100)) : "right" == n ? ($(o).css("left", "-" + e.stageWidth + "px"), setTimeout(function () { $(o).css(e.getCSSPrefix() + "transition-property", "left"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("left", "0px") }, 100)) : "up" == n ? ($(o).css("top", e.stageHeight + "px"), setTimeout(function () { $(o).css(e.getCSSPrefix() + "transition-property", "top"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("top", "0px") }, 100)) : "down" == n && ($(o).css("top", "-" + e.stageHeight + "px"), setTimeout(function () { $(o).css(e.getCSSPrefix() + "transition-property", "top"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("top", "0px") }, 100)), setTimeout(function () { resetSceneTimer(e), e.registerMouseEventsForScene(e._currentScene), e.registerMouseEventsForWebObjects(e._currentScene), e.startScene(e.tickIntervall, e._currentScene.Autostart), e.startMovie() }, i) } else { r = i / 1e3 + "s"; if (e._currentScene.Oid == e._nextScene.Oid) s = $("#" + e._currentScene.Oid + ":nth-child(1)"), o = $("#" + e._currentScene.Oid + ":nth-child(2)"); else s = $("#" + e._currentScene.Oid), o = $("#" + e._nextScene.Oid); "left" == n ? ($(s).css(e.getCSSPrefix() + "transition-property", "left"), $(s).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("display", "block"), $(o).css("left", e.stageWidth + "px"), setTimeout(function () { $(s).css("left", "-" + e.stageWidth + "px"), $(o).css(e.getCSSPrefix() + "transition-property", "left"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("left", "0px") }, 100)) : "right" == n ? ($(s).css(e.getCSSPrefix() + "transition-property", "left"), $(s).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("display", "block"), $(o).css("left", "-" + e.stageWidth + "px"), setTimeout(function () { $(s).css("left", e.stageWidth + "px"), $(o).css(e.getCSSPrefix() + "transition-property", "left"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("left", "0px") }, 100)) : "up" == n ? ($(s).css(e.getCSSPrefix() + "transition-property", "top"), $(s).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("display", "block"), $(o).css("top", e.stageHeight + "px"), setTimeout(function () { $(s).css("top", "-" + e.stageHeight + "px"), $(o).css(e.getCSSPrefix() + "transition-property", "top"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("top", "0px") }, 100)) : "down" == n && ($(s).css(e.getCSSPrefix() + "transition-property", "top"), $(s).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("display", "block"), $(o).css("top", "-" + e.stageHeight + "px"), setTimeout(function () { $(s).css("top", e.stageHeight + "px"), $(o).css(e.getCSSPrefix() + "transition-property", "top"), $(o).css(e.getCSSPrefix() + "transition-duration", r), $(o).css("top", "0px") }, 100)), setTimeout(function () { resetSceneTimer(e), resetTimelines(e), removeSceneFromDOM(e._currentScene.Oid), e._currentScene = e._nextScene, e._nextScene = null, e.registerMouseEventsForScene(e._currentScene), e.registerMouseEventsForWebObjects(e._currentScene), e.startScene(e.tickIntervall, e._currentScene.Autostart) }, i) } } } function resetSceneTimer(e) { e.sceneTimer = 0 } function resetTimelines(e) { e.activeTimelines = [], e.activeTimelineTimers = [], e.activeTimelines.push("MAIN_TIMELINE"), e.activeTimelineTimers.MAIN_TIMELINE = 0 } function WA() { this.workspaceId = "", this.browserInfo = null, this.debug = !1, this.showBrowserCompatibilityCheck = !1, this.usedCSSProps = new Array("opacity", "audio", "fontface", "backgroundsize", "borderimage", "borderradius", "boxshadow", "flexbox", "hsla", "rgba", "textshadow", "cssanimations", "csscolumns", "generatedcontent", "cssgradients", "cssreflections", "csstransforms", "csstransforms3d", "csstransitions", "applicationcache", "canvas", "canvastext", "draganddrop", "hashchange", "history", "audio", "video"), this.tickIntervall = 100, this.sceneTimer = 0, this.movieTimer = 0, this.movieRunning = !0, this.transitionPropertyMapping = { Italic: "Italic", Top: "top", Left: "left", Width: "width", Height: "height", Opacity: "opacity", BackgroundColor: "background-color", LetterSpacing: "letter-spacing", WordSpacing: "word-spacing", LineHeight: "line-height", Display: "display", Tag: "tag", Position: "position", ZIndex: "z-index", Oid: "id", ImageSrc: "src", BoxShadow: "box-shadow", TextShadow: "text-shadow", Property: "property", BorderRadiusTopLeft: "border-top-left-radius", BorderRadiusTopRight: "border-top-right-radius", BorderRadiusBottomLeft: "border-bottom-left-radius", BorderRadiusBottomRight: "border-bottom-right-radius", FontSize: "font-size", RotateX: "RotateX", RotateY: "RotateY", RotateZ: "RotateZ", Underline: "Underline" }, this.animationPropertyMapping = { Property: "transition-property", Duration: "transition-duration", TimingFunc: "transition-timing-function", Delay: "transition-delay" }, this.stage = "", this.scenes = "", this.timelines = "", this.stageHeight = "", this.stageWidth = "", this.stageInitialTransition = "instant", this.stageInitialTransitionSpeed = 0, this.stageInitialScene = "", this._currentScene = null, this._nextScene = null, this._currentTimelineIndex = -1, this.custom = null, this.loaderElements = new Array, this.activeTimelineTimers = new Array, this.activeTimelines = new Array, this.preloadImages = !1, this.imagesToPreload = new Array, this.imagesLoaded = 0, this.loaderType = 1, this.loaderBackgroundColor = "#000", this.loaderForegroundColor = "#fff", this.notSupportedBrowserImage = "", this.t = !1, this.loaderOpts1 = { lines: 17, length: 4, width: 2, radius: 10, corners: 1, rotate: 0, color: "#fff", speed: 1, trail: 55, shadow: !1, hwaccel: !1, className: "spinner", zIndex: 2e9, top: "auto", left: "auto" }, this.loaderOpts2 = { lines: 5, length: 30, width: 2, radius: 25, corners: 1, rotate: 0, color: "#fff", speed: 1, trail: 55, shadow: !1, hwaccel: !1, className: "spinner", zIndex: 2e9, top: "auto", left: "auto" }, this.loaderOpts3 = { lines: 17, length: 0, width: 2, radius: 29, corners: 1, rotate: 0, color: "#fff", speed: 1, trail: 55, shadow: !1, hwaccel: !1, className: "spinner", zIndex: 2e9, top: "auto", left: "auto" }, this.loaderOpts4 = { lines: 0, length: 0, width: 0, radius: 1, corners: 1, rotate: 0, color: "#fff", speed: 0, trail: 0, shadow: !1, hwaccel: !1, className: "spinner", zIndex: 2e9, top: "auto", left: "auto" }, this.Background = function (e, t) { var n = this.handleBackground(t[0]); $(e).css("background-image", n) }, this.BackgroundBtn = function (e) { return this.handleBackgroundBtn(e[0]) }, this.BackgroundImage = function (e, t) { $(e).css("background-image", "url('" + t + "')") }, this.BackgroundColor = function (e, t) { $(e).css("background-color", t) }, this.BackgroundSize = function (e, t) { $(e).css("background-position", t) }, this.BackgroundClip = function (e, t) { $(e).css("-moz-background-clip", t) }, this.BackgroundOrigin = function (e, t) { $(e).css("background-origin", t) }, this.BackgroundRepeat = function (e, t) { $(e).css("background-repeat", t) }, this.BackgroundSize = function (e, t) { $(e).css("background-size", t) }, this.Bottom = function (e, t) { $(e).css("bottom", t) }, this.BorderRadius = function (e, t) { $(e).css("border-radius", t) }, this.BorderImage = function (e, t) { $(e).css("border-image", t) }, this.BoxShadow = function (e, t) { $(e).css("box-shadow", t) }, this.BoxShadowBtn = function (e, t) { return "box-shadow:" + t }, this.Bold = function (e, t) { "true" == t ? $(e).css("font-weight", "bold") : $(e).css("font-weight", "normal") }, this.BoldBtn = function (e) { return "true" == e ? "font-weight:bold" : "font-weight:normal" }, this.BorderLeftColor = function (e, t) { $(e).css("border-left-color", t) }, this.BorderLeftColorBtn = function (e) { return "border-left-color:" + e }, this.BorderLeftWidth = function (e, t) { $(e).css("border-left-width", t) }, this.BorderLeftWidthBtn = function (e) { return "border-left-width:" + e }, this.BorderLeftStyle = function (e, t) { $(e).css("border-left-style", t) }, this.BorderLeftStyleBtn = function (e) { return "border-left-style:" + e }, this.BorderRightColor = function (e, t) { $(e).css("border-right-color", t) }, this.BorderRightColorBtn = function (e) { return "border-right-color:" + e }, this.BorderRightWidth = function (e, t) { $(e).css("border-right-width", t) }, this.BorderRightWidthBtn = function (e) { return "border-right-width:" + e }, this.BorderRightStyle = function (e, t) { $(e).css("border-right-style", t) }, this.BorderRightStyleBtn = function (e) { return "border-right-style:" + e }, this.BorderTopColor = function (e, t) { $(e).css("border-top-color", t) }, this.BorderTopColorBtn = function (e) { return "border-top-color:" + e }, this.BorderTopWidth = function (e, t) { $(e).css("border-top-width", t) }, this.BorderTopWidthBtn = function (e) { return "border-top-width:" + e }, this.BorderTopStyle = function (e, t) { $(e).css("border-top-style", t) }, this.BorderTopStyleBtn = function (e) { return "border-top-style:" + e }, this.BorderBottomColor = function (e, t) { $(e).css("border-bottom-color", t) }, this.BorderBottomColorBtn = function (e) { return "border-bottom-color:" + e }, this.BorderBottomWidth = function (e, t) { $(e).css("border-bottom-width", t) }, this.BorderBottomWidthBtn = function (e) { return "border-bottom-width:" + e }, this.BorderBottomStyle = function (e, t) { $(e).css("border-bottom-style", t) }, this.BorderBottomStyleBtn = function (e) { return "border-bottom-style:" + e }, this.BorderRadiusTopLeft = function (e, t) { $(e).css("border-top-left-radius", t) }, this.BorderRadiusTopLeftBtn = function (e) { return "border-top-left-radius:" + e }, this.BorderRadiusTopRight = function (e, t) { $(e).css("border-top-right-radius", t) }, this.BorderRadiusTopRightBtn = function (e) { return "border-top-right-radius:" + e }, this.BorderRadiusBottomLeft = function (e, t) { $(e).css("border-bottom-left-radius", t) }, this.BorderRadiusBottomLeftBtn = function (e) { return "border-bottom-left-radius:" + e }, this.BorderRadiusBottomRight = function (e, t) { $(e).css("border-bottom-right-radius", t) }, this.BorderRadiusBottomRightBtn = function (e) { return "border-bottom-right-radius:" + e }, this.Cursor = function (e, t) { $(e).css("cursor", t) }, this.Display = function (e, t) { $(e).css("display", t) }, this.FontSize = function (e, t) { $(e).css("font-size", t) }, this.FontFamily = function (e, t) { $(e).css("font-family", t) }, this.Hover = function (e, t) { }, this.Height = function (e, t) { $(e).css("height", t) }, this.Italic = function (e, t) { "true" == t ? $(e).css("font-style", "italic") : $(e).css("font-style", "normal") }, this.ItalicBtn = function (e) { return "true" == e ? "font-style:italic" : "font-style:normal" }, this.InnerHTML = function (e, t) { $(e).html(t) }, this.Left = function (e, t) { $(e).css("left", t) }, this.LeftBtn = function (e) { return "margin-left:" + e }, this.LetterSpacing = function (e, t) { $(e).css("letter-spacing", t) }, this.LineHeight = function (e, t) { $(e).css("line-height", t) }, this.Oid = function (e, t) { $(e).css("id", t) }, this.Overflow = function (e, t) { $(e).css("overflow", t) }, this.Opacity = function (e, t) { $(e).css("opacity", t) }, this.OnMouseOver = function (e, t) { }, this.OnMouseOverParam = function (e, t) { }, this.OnMouseOverTransition = function (e, t) { }, this.OnMouseOverTransitionDirection = function (e, t) { }, this.OnMouseOverTransitionSpeed = function (e, t) { }, this.OnMouseClick = function (e, t) { }, this.OnMouseClickParam = function (e, t) { }, this.OnMouseClickTransition = function (e, t) { }, this.OnMouseClickTransitionDirection = function (e, t) { }, this.OnMouseClickTransitionSpeed = function (e, t) { }, this.OnMouseDown = function (e, t) { }, this.OnMouseDownParam = function (e, t) { }, this.OnMouseDownTransition = function (e, t) { }, this.OnMouseDownTransitionDirection = function (e, t) { }, this.OnMouseDownTransitionSpeed = function (e, t) { }, this.OnMouseUp = function (e, t) { }, this.OnMouseUpParam = function (e, t) { }, this.OnMouseUpTransition = function (e, t) { }, this.OnMouseUpTransitionDirection = function (e, t) { }, this.OnMouseUpTransitionSpeed = function (e, t) { }, this.OnMouseOut = function (e, t) { }, this.OnMouseOutParam = function (e, t) { }, this.OnMouseOutTransition = function (e, t) { }, this.OnMouseOutTransitionDirection = function (e, t) { }, this.OnMouseOutTransitionSpeed = function (e, t) { }, this.Position = function (e, t) { $(e).css("position", t) }, this.PaddingLeft = function (e, t) { $(e).css("padding-left", t) }, this.PaddingRight = function (e, t) { $(e).css("padding-right", t) }, this.PaddingTop = function (e, t) { $(e).css("padding-top", t) }, this.PaddingBottom = function (e, t) { $(e).css("padding-bottom", t) }, this.Right = function (e, t) { $(e).css("right", t) }, this.RotateX = function (e) { return "rotateX(" + e + ")" }, this.RotateXBtn = function (e) { return this.getCSSPrefix() + "transform: rotateX(" + e + ")" }, this.RotateY = function (e) { return "rotateY(" + e + ")" }, this.RotateYBtn = function (e) { return this.getCSSPrefix() + "transform: rotateY(" + e + ")" }, this.RotateZ = function (e) { return "rotateZ(" + e + ")" }, this.RotateZBtn = function (e) { return this.getCSSPrefix() + "transform: rotateZ(" + e + ")" }, this.Rotate3DX = function (e) { return "rotate3d(1,1,1," + e + ")" }, this.Rotate3DY = function (e) { return "rotate3d(0,1,0," + e + ")" }, this.Rotate3DZ = function (e) { return "rotate3d(0,0,1," + e + ")" }, this.ScaleX = function (e) { return "scaleX(" + e + ")" }, this.ScaleXBtn = function (e) { return this.getCSSPrefix() + "transform: scaleX(" + e + ")" }, this.ScaleY = function (e) { return "scaleY(" + e + ")" }, this.ScaleYBtn = function (e) { return this.getCSSPrefix() + "transform: scaleY(" + e + ")" }, this.SkewX = function (e) { return "skewX(" + e + ")" }, this.SkewXBtn = function (e) { return this.getCSSPrefix() + "transform: skewX(" + e + ")" }, this.SkewY = function (e) { return "skewY(" + e + ")" }, this.SkewYBtn = function (e) { return this.getCSSPrefix() + "transform: skewY(" + e + ")" }, this.Src = function (e, t) { $(e).attr("src", t) }, this.Tag = function (e, t) { }, this.TextAlign = function (e, t) { $(e).css("text-align", t) }, this.TextAlignBtn = function (e) { return "text-align:" + e }, this.TextColor = function (e, t) { $(e).css("color", t) }, this.TextColorBtn = function (e) { return "color:" + e }, this.Top = function (e, t) { $(e).css("top", t) }, this.TopBtn = function (e) { return "margin-top:" + e }, this.Type = function (e, t) { }, this.Transform = function (e, t) { var n = ""; for (var i in t) for (var r in t[i]) n += r + "(" + t[i][r] + ") "; $(e).css(this.getCSSPrefix() + "transform", n) }, this.TranslateX = function (e, t) { $(e).css(this.getCSSPrefix() + "transform", "translateX(" + t + ")") }, this.TranslateY = function (e, t) { $(e).css(this.getCSSPrefix() + "transform", "translateY(" + t + ")") }, this.TranslateZ = function (e, t) { $(e).css(this.getCSSPrefix() + "transform", "translateZ(" + t + ")") }, this.Underline = function (e, t) { "true" == t ? $(e).css("text-decoration", "underline") : $(e).css("text-decoration", "none") }, this.UnderlineBtn = function (e) { return "true" == e ? "text-decoration:underline" : "text-decoration:none" }, this.Visible = function (e, t) { $(e).css("visibility", "false" == t ? "hidden" : "visible") }, this.Width = function (e, t) { $(e).css("width", t) }, this.WordSpacing = function (e, t) { $(e).css("word-spacing", t) }, this.WordWrap = function (e, t) { $(e).css("word-wrap", t) }, this.ZIndex = function (e, t) { $(e).css("z-index", t) }, this.addCSS = function (e) { var t = document.createElement("style"); t.type = "text/css", t.styleSheet ? t.styleSheet.cssText = e : t.appendChild(document.createTextNode(e)), document.getElementsByTagName("head")[0].appendChild(t) }, this.activateTimeline = function (e) { if ($.inArray(e, this.activeTimelines) < 0) { this.activeTimelines.push(e), this.activeTimelineTimers[e] = 0; var t = this.getTimelineIndexForId(e); $("#timelineInfo").html(this._currentScene.Timelines[t].Name) } else { this.activeTimelineTimers[e] = 0; t = this.getTimelineIndexForId(e); $("#timelineInfo").html(this._currentScene.Timelines[t].Name) } }, this.bindSceneEvents = function (e) { "" != e.OnKeyDown && void 0 !== e.OnKeyDown && this.registerKeyEvent(this, "keydown", e.OnKeyDown, e.OnKeyDownParam), "" != e.OnKeyPress && void 0 !== e.OnKeyPress && this.registerKeyEvent(this, "keypress", e.OnKeyPress, e.OnKeyPressParam), "" != e.OnKeyUp && void 0 !== e.OnKeyUp && this.registerKeyEvent(this, "keyup", e.OnKeyUp, e.OnKeyUpParam) }, this.IsChromeFrameInstalled = function () { return navigator.userAgent.toLowerCase().indexOf("chromeframe") >= 0 }, this.reScaleStage = function (e) { var t = $("#" + e), n = $("#" + e + "Container").height(), i = $("#" + e + "Container").width(); this.scaleStage(t, i, n); var r = this; setTimeout(function () { var t = $("#" + e), n = $("#" + e + "Container").height(), i = $("#" + e + "Container").width(); r.scaleStage(t, i, n) }, 200) }, this.scaleStage = function (e, t, n) { var i, r; if (i = t / this.stageWidth, r = n / this.stageHeight, this.scaleX = i, this.scaleY = r, this.scale = i > r ? r : i, this.responsiveStageKeepRatio) { var o = Math.abs(Math.floor((this.stageWidth * this.scale - t) / 2)), s = Math.abs(Math.floor((this.stageHeight * this.scale - n) / 2)); e.attr("style", "transform:scale(" + this.scale + ");left:" + o + "px;top:" + s + "px;") } else e.attr("style", "transform:scale(" + this.scaleX + ", " + this.scaleY + ");left:0px;top:0px;") }, this.createWorkspace = function (e) { var t = $("#" + e); this.workspaceId = e, $(t).css("width", this.stageWidth + "px"), $(t).css("height", this.stageHeight + "px"), $(t).css("overflow", "hidden"), $(t).css("position", "relative"), $(t).attr("tabindex", 0); var n = !0; if (navigator.userAgent.match(/msie/i) && 0 == this.IsChromeFrameInstalled() && (n = !1), n) { if (this.preloadImages && this.imagesToPreload.length > 0 ? (this.showPreloader(), this.preloadimages()) : this.switchScenes(this.stageInitialScene, this.stageInitialTransition, this.stageInitialTransitionDirection, this.stageInitialTransitionSpeed), this.responsiveStage) { this.reScaleStage(e); var i = this; $(window).resize(_.debounce(function () { i.reScaleStage(e) }, 150)) } } else $(t).prepend('<img id="browserIncomp_' + e + '" src="' + this.notSupportedBrowserImage + '" />'); if (this.checkCompatibility(), this.debug) { var r = $(document.createElement("div")).attr("id", "debugInfo"), o = $(document.createElement("div")).attr("id", "divTimers"), s = $(document.createElement("div")).html("0").attr("id", "sceneTimer"); $(o).append(s), $(s).before("Scene Time: "); var c = $(document.createElement("div")).html("0").attr("id", "movieTimer"); $(o).append(c), $(c).before("Movie Time: "); var a = $(document.createElement("div")).html("").attr("id", "sceneInfo"); $(o).append(a), $(a).before("Scene: "); var u = $(document.createElement("div")).html("").attr("id", "timelineInfo"); $(o).append(u), $(u).before("Timeline: "); var d = $(document.createElement("div")).attr("id", "divButtons"); $(d).append('<input type="button" id="btnStop" class="debugBtn" onClick="WA.stopMovie()" value="Stop Animation"></input>'), $(d).append('<input type="button" id="btnResume" class="debugBtn" onClick="WA.resumeMovie()" value="Resume Animation"></input>'), $(r).append(o), $(r).append(d), $("body").prepend(r) } if (this.showBrowserCompatibilityCheck) { var h = $(document.createElement("div")).attr("id", "browserCompCheckInfo"), l = $(document.createElement("div")).html("CSS Support").addClass("cssPropCheckTitle"); $(h).append(l); for (var p = 0; p < this.usedCSSProps.length; p++) { var f = $(document.createElement("div")).html(this.usedCSSProps[p]).addClass("cssPropCheckItem"); this.checkCSSSupported(this.usedCSSProps[p]) ? $(f).css("background-color", "green") : $(f).css("background-color", "red"), $(h).append(f) } $("body").prepend(h) } }, this.createWebObjectsForScene = function (e) { var t = $(document.createElement("div")); t.attr("id", e.Oid), $(t).addClass("sceneContainer"), $(t).css("position", e.Position), $(t).css("left", e.Left), $(t).css("display", "none"), $(t).css("top", e.Top), $(t).css("width", this.stageWidth + "px"), $(t).css("height", this.stageHeight + "px"), $(t).css("overflow", "hidden"), $(t).css("backgroundColor", e.BackgroundColor), $(t).css(this.getCSSPrefix() + "perspective", e.Perspective), $("#" + this.workspaceId).append(t); for (var n in e.Timelines[0].Objects) { var i = e.Timelines[0].Objects[n]; if ("plugin" == i.Type) $("#" + e.Oid).append(i.InnerHTML), this.log(e.Oid); else { var r = this.createObject(i); this.createObjectProperties(e, r, i), $(t).append(r), this.handleHoverButtonState(i), this.handlePressedButtonState(i) } } }, this.checkCSSSupported = function (e) { return Modernizr[e] }, this.checkCompatibility = function () { var pStr = "60, 97, 32, 104, 114, 101, 102, 61, 34, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 119, 101, 98, 97, 110, 105, 109, 97, 116, 111, 114, 46, 99, 111, 109, 34, 32, 115, 116, 121, 108, 101, 61, 34, 122, 45, 105, 110, 100, 101, 120, 58, 49, 48, 48, 48, 59, 32, 102, 111, 110, 116, 45, 102, 97, 109, 105, 108, 121, 58, 65, 114, 105, 97, 108, 59, 32, 112, 111, 115, 105, 116, 105, 111, 110, 58, 97, 98, 115, 111, 108, 117, 116, 101, 59, 32, 99, 111, 108, 111, 114, 58, 119, 104, 105, 116, 101, 59, 32, 98, 97, 99, 107, 103, 114, 111, 117, 110, 100, 58, 98, 108, 97, 99, 107, 59, 32, 111, 112, 97, 99, 105, 116, 121, 58, 48, 46, 54, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 49, 49, 112, 120, 59, 32, 112, 97, 100, 100, 105, 110, 103, 58, 51, 112, 120, 59, 34, 62, 69, 114, 115, 116, 101, 108, 108, 116, 32, 109, 105, 116, 32, 87, 101, 98, 65, 110, 105, 109, 97, 116, 111, 114, 32, 112, 108, 117, 115, 60, 47, 97, 62", output = eval("String.fromCharCode(" + pStr + ")"); $("#" + this.workspaceId).append(output) }, this.createObject = function (e) { var t = $(document.createElement("" + e.Tag)); return t.attr("id", e.Oid), t }, this.createObjectProperties = function (e, t, n) { var i = null; for (var r in n) if ("Hover" == r) { var o = ""; for (var s in n.Hover) currentProp = n.Hover[s].Property, "Background" == currentProp ? o += this.handleBackgroundGradient(n.Hover[s]) : "BoxShadow" == currentProp ? o += this.handleShadowBtn(n.Hover[s]) + " !important;" : "Italic" == currentProp || "Underline" == currentProp || "Bold" == currentProp || "BorderLeftColor" == currentProp || "BorderLeftWidth" == currentProp || "BorderLeftStyle" == currentProp || "BorderTopColor" == currentProp || "BorderTopWidth" == currentProp || "BorderTopStyle" == currentProp || "BorderBottomColor" == currentProp || "BorderBottomWidth" == currentProp || "BorderBottomStyle" == currentProp || "BorderRightColor" == currentProp || "BorderRightWidth" == currentProp || "BorderRightStyle" == currentProp || "BorderRadiusTopLeft" == currentProp || "BorderRadiusTopRight" == currentProp || "BorderRadiusBottomLeft" == currentProp || "BorderRadiusBottomLeft" == currentProp || "RotateX" == currentProp || "RotateY" == currentProp || "RotateZ" == currentProp || "SkewX" == currentProp || "SkewY" == currentProp || "ScaleX" == currentProp || "ScaleY" == currentProp || "Left" == currentProp || "Top" == currentProp || "TextColor" == currentProp || "TextAlign" == currentProp ? o += this[n.Hover[s].Property + "Btn"](n.Hover[s].EndValue) + " !important;" : "InnerHTML" == currentProp ? this.handleHoverButtonState(n, n.Hover[s].EndValue) : o += this.transitionPropertyMapping[n.Hover[s].Property] + ":" + n.Hover[s].EndValue + " !important;"; null == i && ((i = document.createElement("style")).appendChild(document.createTextNode("")), document.head.appendChild(i)), i.sheet.insertRule("#" + n.Oid + ":hover {" + o + "}", 0) } else if ("Pressed" == r) { var c = ""; for (var s in n.Pressed) currentProp = n.Pressed[s].Property, "Background" == currentProp ? c += this.handleBackgroundGradient(n.Pressed[s]) : "BoxShadow" == currentProp ? c += this.handleShadowBtn(n.Pressed[s]) + " !important;" : "Italic" == currentProp || "Underline" == currentProp || "Bold" == currentProp || "BorderLeftColor" == currentProp || "BorderLeftWidth" == currentProp || "BorderLeftStyle" == currentProp || "BorderTopColor" == currentProp || "BorderTopWidth" == currentProp || "BorderTopStyle" == currentProp || "BorderBottomColor" == currentProp || "BorderBottomWidth" == currentProp || "BorderBottomStyle" == currentProp || "BorderRightColor" == currentProp || "BorderRightWidth" == currentProp || "BorderRightStyle" == currentProp || "BorderRadiusTopLeft" == currentProp || "BorderRadiusTopRight" == currentProp || "BorderRadiusBottomLeft" == currentProp || "BorderRadiusBottomLeft" == currentProp || "RotateX" == currentProp || "RotateY" == currentProp || "RotateZ" == currentProp || "SkewX" == currentProp || "SkewY" == currentProp || "ScaleX" == currentProp || "ScaleY" == currentProp || "Left" == currentProp || "Top" == currentProp || "TextColor" == currentProp || "TextAlign" == currentProp ? c += this[n.Pressed[s].Property + "Btn"](n.Pressed[s].EndValue) + " !important;" : c += this.transitionPropertyMapping[n.Pressed[s].Property] + ":" + n.Pressed[s].EndValue + " !important;"; null == i && ((i = document.createElement("style")).appendChild(document.createTextNode("")), document.head.appendChild(i)), i.sheet.insertRule("#" + n.Oid + ":active {" + c + "}", 0) } else if ("Background" == r) { var a = this.handleBackground(n.Background); $(t).css("background-image", a) } else if ("Reflection" == r) { var u = this.handleReflection(n.Reflection); $(t).css("-webkit-box-reflect", u) } else if ("TextShadow" == r) { var d = this.handleShadow(n.TextShadow); $(t).css(this.transitionPropertyMapping[r], d) } else if ("BoxShadow" == r) { d = this.handleShadow(n.BoxShadow); $(t).css(this.transitionPropertyMapping[r], d) } else "SkewX" == r || "SkewY" == r ? $(t).css(this.getCSSPrefix() + "transform", this[r](n[r])) : 0 == r.indexOf("data-") ? $(t).attr(r, n[r]) : this[r](t, n[r]) }, this.detectBrowser = function () { var e = {}; if (navigator) { e.ie = parseFloat(n(/MSIE (\d+\.\d+)/)) || null, e.gecko = parseFloat(n(/Gecko\/(\d+)/)) || null, e.ff = parseFloat(n(/Firefox\/(\d+\.\d+)/)) || null, e.khtml = parseFloat(n(/\((KHTML)/) && 1) || null, e.webkit = parseFloat(n(/AppleWebKit\/(\d+\.\d+)/)), e.chrome = parseFloat(e.webkit && n(/Chrome\/(\d+\.\d+)/)) || null, e.safari = parseFloat(e.webkit && n(/Safari\/(\d+\.\d+)/) && n(/Version\/(\d+\.\d+)/)) || null, e.opera = parseFloat(n(/Opera\/(\d+\.\d+)/) && n(/Version\/(\d+\.\d+)/)) || n(/Opera\/(\d+\.\d+)/) || null; for (var t in e) null === e[t] && delete e[t]; e.opera && e.ie && delete e.ie, this.browserInfo = e } function n(e) { var t = navigator && navigator.userAgent && navigator.userAgent.match(e); return t && t[1] } }, this.loadMainTimeline = function () { }, this.startMovie = function () { updateTimelines(this, this.tickIntervall) }, this.getCSSPrefix = function () { return this.browserInfo.gecko ? "-moz-" : this.browserInfo.webkit ? "-webkit-" : this.browserInfo.ie ? "-ms-" : this.browserInfo.opera ? "-o-" : "" }, this.getSceneForId = function (e) { for (var t in this.stage) { var n = this.stage[t]; if (n.Oid == e) return n } return null }, this.getTimelineIndexForId = function (e) { for (var t in this._currentScene.Timelines) { if (this._currentScene.Timelines[t].Oid == e) return t } return null }, this.handleHoverButtonState = function (e) { for (var t in e) if ("Hover" == t) { var n = "", i = ""; for (var r in e.Hover) if (i = e.Hover[r].Property, n = e.Hover[r].EndValue, "InnerHTML" == i) { var o = ""; return $("#" + e.Oid).bind("mouseover", function () { o = $(this).html(), $(this).html(n) }), void $("#" + e.Oid).bind("mouseleave", function () { $(this).html(o) }) } } }, this.handlePressedButtonState = function (e) { for (var t in e) if ("Pressed" == t) { var n = "", i = ""; for (var r in e.Pressed) if (i = e.Pressed[r].Property, n = e.Pressed[r].EndValue, "InnerHTML" == i) { var o = ""; return $("#" + e.Oid).bind("mousedown", function () { o = $(this).html(), $(this).html(n) }), void $("#" + e.Oid).bind("mouseup", function () { $(this).html(o) }) } } }, this.handleBackground = function (e) { var t = ""; switch (this.getCSSPrefix()) { case "-moz-": t += "-moz-" + e[0].BackgroundGradientType + "-gradient(" + e[0].BackgroundGradientAngle + "," + e[0].BackgroundGradientColor1 + "," + e[0].BackgroundGradientColor2 + ")"; break; case "-webkit-": t += "-webkit-" + e[0].BackgroundGradientType + "-gradient(" + e[0].BackgroundGradientAngle + "," + e[0].BackgroundGradientColor1 + "," + e[0].BackgroundGradientColor2 + ")"; break; case "-ms-": t += "-ms-" + e[0].BackgroundGradientType + "-gradient(" + e[0].BackgroundGradientAngle + "," + e[0].BackgroundGradientColor1 + "," + e[0].BackgroundGradientColor2 + ")"; break; case "-o-": t += "-o-" + e[0].BackgroundGradientType + "-gradient(" + e[0].BackgroundGradientAngle + "," + e[0].BackgroundGradientColor1 + "," + e[0].BackgroundGradientColor2 + ")" }return t }, this.handleBackGroundBtn = function (e) { return "backgroundColor:" + e }, this.handleBackgroundGradient = function (e) { var t = "", n = e.BackgroundGradientType; return "background:" + this.getCSSPrefix() + (t += "singleColor" == n ? "linear-gradient(0deg," + e.BackgroundColor + "," + e.BackgroundColor + ") !important;" : e.BackgroundGradientType + "-gradient(" + e.BackgroundGradientAngle + "," + e.BackgroundGradientColor1 + "," + e.BackgroundGradientColor2 + ") !important;") }, this.handleShadow = function (e) { var t = ""; return t += e[0].OffsetX + " " + e[0].OffsetY + " " + e[0].BlurRadius + " " + e[0].Color }, this.handleShadowBtn = function (e) { return "box-shadow: " + e.OffsetX + " " + e.OffsetY + " " + e.BlurRadius + " " + e.Color }, this.handleReflection = function (e) { var t = ""; return t += "below " + e[0].Offset + " -webkit-linear-gradient(top, rgba(0,0,0,0) " + e[0].Depth + ",rgba(255,255,255,1) 100%)" }, this.handleEvent = function () { 1 == this._currentScene.OnAnimationFinished ? this.custom[this._currentScene.OnAnimationFinishedParam]() : 2 == this._currentScene.OnAnimationFinished ? this.switchScenes(this._currentScene.OnAnimationFinishedParam, this._currentScene.NextSceneTransition, this._currentScene.NextSceneTransitionDirection, this._currentScene.NextSceneTransitionSpeed) : 3 == this._currentScene.OnAnimationFinished ? this.switchTimelines(this._currentScene.OnAnimationFinishedParam) : 4 == this._currentScene.OnAnimationFinished ? window.open(this._currentScene.OnAnimationFinishedParam) : 5 == this._currentScene.OnAnimationFinished && this.stopMovie() }, this.init = function () { this.detectBrowser() }, this.log = function (e) { this.debug && console.log(e) }, this.imageloadpost = function (e, t) { e.imagesLoaded++ , e.imagesLoaded == e.imagesToPreload.length && ($("#" + e.workspaceId + "A5Loader").remove(), e.switchScenes(e.stageInitialScene, e.stageInitialTransition, e.stageInitialTransitionDirection, e.stageInitialTransitionSpeed)) }, this.preloadimages = function () { for (var e = [], t = 0; t < this.imagesToPreload.length; t++) { e[t] = new Image, e[t].src = this.imagesToPreload[t]; var n = this; e[t].onload = function () { var e = this.src; n.imageloadpost(n, e) }, e[t].onerror = function () { var e = this.src; n.imageloadpost(n, e) } } }, this.registerMouseEventsForWebObjects = function (e) { for (var t in e.Timelines[this._currentTimelineIndex].Objects) { var n = e.Timelines[this._currentTimelineIndex].Objects[t]; this.registerMouseEventForWebObject(this, n) } }, this.registerMouseEventsForScene = function (e) { if (void 0 !== e.OnMouseClick) { var t = e.OnMouseClick, n = e.OnMouseClickParam, i = $("#" + e.Oid); 1 == t ? $(i).bind("click", function () { this.custom[n]() }) : 2 == t ? $(i).bind("click", function () { this.switchScenes(n, transition, direction, speed) }) : 3 == t ? $(i).bind("click", function () { this.activateTimeline(n) }) : 4 == t ? $(i).bind("click", function () { window.open(n) }) : 5 == t ? $(i).bind("click", function () { this.stopMovie() }) : 6 == t ? $(i).bind("click", function () { this.resumeMovie() }) : 7 == t && $(i).bind("click", function () { this.switchTimelines(n) }) } if (void 0 !== e.OnMouseDown) { t = e.OnMouseDown, n = e.OnMouseDownParam, i = $("#" + e.Oid); 1 == t ? $(i).bind("mousedown", function () { this.custom[n]() }) : 2 == t ? $(i).bind("mousedown", function () { this.switchScenes(n, transition, direction, speed) }) : 3 == t ? $(i).bind("mousedown", function () { this.activateTimeline(n) }) : 4 == t ? $(i).bind("mousedown", function () { window.open(n) }) : 5 == t ? $(i).bind("mousedown", function () { this.stopMovie() }) : 6 == t ? $(i).bind("mousedown", function () { this.resumeMovie() }) : 7 == t && $(i).bind("mousedown", function () { this.switchTimelines(n) }) } if (void 0 !== e.OnMouseOut) { t = e.OnMouseOut, n = e.OnMouseOutParam, i = $("#" + e.Oid); 1 == t ? $(i).bind("mouseleave", function () { this.custom[n]() }) : 2 == t ? $(i).bind("mouseleave", function () { this.switchScenes(n, transition, direction, speed) }) : 3 == t ? $(i).bind("mouseleave", function () { this.activateTimeline(n) }) : 4 == t ? $(i).bind("mouseleave", function () { window.open(n) }) : 5 == t ? $(i).bind("mouseleave", function () { this.stopMovie() }) : 6 == t ? $(i).bind("mouseleave", function () { this.resumeMovie() }) : 7 == t && $(i).bind("mouseleave", function () { this.switchTimelines(n) }) } if (void 0 !== e.OnMouseOver) { t = e.OnMouseOver, n = e.OnMouseOverParam, i = $("#" + e.Oid); 1 == t ? $(i).bind("mouseover", function () { this.custom[n]() }) : 2 == t ? $(i).bind("mouseover", function () { this.switchScenes(n, transition, direction, speed) }) : 3 == t ? $(i).bind("mouseover", function () { this.activateTimeline(n) }) : 4 == t ? $(i).bind("mouseover", function () { window.open(n) }) : 5 == t ? $(i).bind("mouseover", function () { this.stopMovie() }) : 6 == t ? $(i).bind("mouseover", function () { this.resumeMovie() }) : 7 == t && $(i).bind("mouseover", function () { this.switchTimelines(n) }) } if (void 0 !== e.OnMouseUp) { t = e.OnMouseUp, n = e.OnMouseUpParam, i = $("#" + e.Oid); 1 == t ? $(i).bind("mouseup", function () { this.custom[n]() }) : 2 == t ? $(i).bind("mouseup", function () { this.switchScenes(n, transition, direction, speed) }) : 3 == t ? $(i).bind("mouseup", function () { this.activateTimeline(n) }) : 4 == t ? $(i).bind("mouseup", function () { window.open(n) }) : 5 == t ? $(i).bind("mouseup", function () { this.stopMovie() }) : 6 == t ? $(i).bind("mouseup", function () { this.resumeMovie() }) : 7 == t && $(i).bind("mouseup", function () { this.switchTimelines(n) }) } }, this.registerMouseEventForWebObject = function (e, t) { void 0 !== t.OnMouseClick && (wObject = $("#" + t.Oid), 1 == t.OnMouseClick ? $(wObject).bind("click", function () { e.custom[t.OnMouseClickParam]() }) : 2 == t.OnMouseClick ? $(wObject).bind("click", function () { e.switchScenes(t.OnMouseClickParam, t.OnMouseClickTransition, t.OnMouseClickTransitionDirection, t.OnMouseClickTransitionSpeed) }) : 3 == t.OnMouseClick ? $(wObject).bind("click", function () { e.activateTimeline(t.OnMouseClickParam) }) : 4 == t.OnMouseClick ? $(wObject).bind("click", function () { window.open(t.OnMouseClickParam) }) : 5 == t.OnMouseClick ? $(wObject).bind("click", function () { e.stopMovie() }) : 6 == t.OnMouseClick ? $(wObject).bind("click", function () { e.resumeMovie() }) : 7 == t.OnMouseClick && $(wObject).bind("click", function () { e.switchTimelines(t.OnMouseClickParam) })), void 0 !== t.OnMouseDown && (wObject = $("#" + t.Oid), 1 == t.OnMouseDown ? $(wObject).bind("mousedown", function () { e.custom[t.OnMouseDownParam]() }) : 2 == t.OnMouseDown ? $(wObject).bind("mousedown", function () { e.switchScenes(t.OnMouseDownParam, t.OnMouseDownTransition, t.OnMouseDownTransitionDirection, t.OnMouseDownTransitionSpeed) }) : 3 == t.OnMouseDown ? $(wObject).bind("mousedown", function () { e.activateTimeline(t.OnMouseDownParam) }) : 4 == t.OnMouseDown ? $(wObject).bind("mousedown", function () { window.open(t.OnMouseDownParam) }) : 5 == t.OnMouseDown ? $(wObject).bind("mousedown", function () { e.stopMovie() }) : 6 == t.OnMouseDown ? $(wObject).bind("mousedown", function () { e.resumeMovie() }) : 7 == t.OnMouseDown && $(wObject).bind("mousedown", function () { e.switchTimelines(t.OnMouseDownParam) })), void 0 !== t.OnMouseOut && (wObject = $("#" + t.Oid), 1 == t.OnMouseOut ? $(wObject).bind("mouseleave", function () { e.custom[t.OnMouseOutParam]() }) : 2 == t.OnMouseOut ? $(wObject).bind("mouseleave", function () { e.switchScenes(t.OnMouseOutParam, t.OnMouseOutTransition, t.OnMouseOutTransitionDirection, t.OnMouseOutTransitionSpeed) }) : 3 == t.OnMouseOut ? $(wObject).bind("mouseleave", function () { e.activateTimeline(t.OnMouseOutParam) }) : 4 == t.OnMouseOut ? $(wObject).bind("mouseleave", function () { window.open(t.OnMouseOutParam) }) : 5 == t.OnMouseOut ? $(wObject).bind("mouseleave", function () { e.stopMovie() }) : 6 == t.OnMouseOut ? $(wObject).bind("mouseleave", function () { e.resumeMovie() }) : 7 == t.OnMouseOut && $(wObject).bind("mouseleave", function () { e.switchTimelines(t.OnMouseOutParam) })), void 0 !== t.OnMouseOver && (wObject = $("#" + t.Oid), 1 == t.OnMouseOver ? $(wObject).bind("mouseover", function () { e.custom[t.OnMouseOverParam]() }) : 2 == t.OnMouseOver ? $(wObject).bind("mouseover", function () { e.switchScenes(t.OnMouseOverParam, t.OnMouseOverTransition, t.OnMouseOverTransitionDirection, t.OnMouseOverTransitionSpeed) }) : 3 == t.OnMouseOver ? $(wObject).bind("mouseover", function () { e.activateTimeline(t.OnMouseOverParam) }) : 4 == t.OnMouseOver ? $(wObject).bind("mouseover", function () { window.open(t.OnMouseOverParam) }) : 5 == t.OnMouseOver ? $(wObject).bind("mouseover", function () { e.stopMovie() }) : 6 == t.OnMouseOver ? $(wObject).bind("mouseover", function () { e.resumeMovie() }) : 7 == t.OnMouseOver && $(wObject).bind("mouseover", function () { e.switchTimelines(t.OnMouseOverParam) })), void 0 !== t.OnMouseUp && (wObject = $("#" + t.Oid), 1 == t.OnMouseUp ? $(wObject).bind("mouseup", function () { e.custom[t.OnMouseUpParam]() }) : 2 == t.OnMouseUp ? $(wObject).bind("mouseup", function () { e.switchScenes(t.OnMouseUpParam, t.OnMouseUpTransition, t.OnMouseUpTransitionDirection, t.OnMouseUpTransitionSpeed) }) : 3 == t.OnMouseUp ? $(wObject).bind("mouseup", function () { e.activateTimeline(t.OnMouseUpParam) }) : 4 == t.OnMouseUp ? $(wObject).bind("mouseup", function () { window.open(t.OnMouseUpParam) }) : 5 == t.OnMouseUp ? $(wObject).bind("mouseup", function () { e.stopMovie() }) : 6 == t.OnMouseUp ? $(wObject).bind("mouseup", function () { e.resumeMovie() }) : 7 == t.OnMouseUp && $(wObject).bind("mouseup", function () { e.switchTimelines(t.OnMouseUpParam) })) }, this.registerKeyEvent = function (e, t, n, i) { switch (n) { case 1: $("#" + e.workspaceId).bind(t, function () { e.custom[i]() }); break; case 2: $("#" + e.workspaceId).bind(t, function () { e.switchScenes(i, e._currentScene.NextSceneTransition, e._currentScene.NextSceneTransitionDirection, e._currentScene.NextSceneTransitionSpeed) }); break; case 3: $("#" + e.workspaceId).bind(t, function () { e.activateTimeline(i) }); break; case 4: $("#" + e.workspaceId).bind(t, function () { window.location = i }); break; case 5: $("#" + e.workspaceId).bind(t, function () { e.stopMovie() }); break; case 6: $("#" + e.workspaceId).bind(t, function () { e.resumeMovie() }); break; case 7: $("#" + e.workspaceId).bind(t, function () { e.switchTimelines(i) }) } }, this.resumeMovie = function () { this.movieRunning = !0 }, this.removeCssHoverStyles = function (e) { var t = document.styleSheets[0], n = t.cssRules ? t.cssRules : t.rules; if (n) for (t.crossdelete = t.deleteRule ? t.deleteRule : t.removeRule, i = 0; i < n.length; i++)n[i].selectorText && -1 != n[i].selectorText.indexOf("#" + e.Oid) && (this.log("CSS -> deleting: #" + e.Oid + " at position: " + i), t.crossdelete(i), i--) }, this.startScene = function (e, t) { if ("" != this._currentScene.OnSceneLoad) switch (this._currentScene.OnSceneLoad) { case 1: this.custom[this._currentScene.OnSceneLoadParam](); break; case 2: this.switchScenes(this._currentScene.OnSceneLoadParam, this._currentScene.NextSceneTransition, this._currentScene.NextSceneTransitionDirection, this._currentScene.NextSceneTransitionSpeed); break; case 3: this.activateTimeline(this._currentScene.OnSceneLoadParam); break; case 4: window.open(this._currentScene.OnSceneLoadParam); break; case 5: this.stopMovie(); break; case 6: this.resumeMovie() }"true" == t && this.resumeMovie() }, this.stopMovie = function () { this.movieRunning = !1 }, this.showPreloader = function () { var e = $(this).attr("workspaceId"), t = $(document.createElement("div")).html("").attr("id", e + "A5Loader"); $("#" + this.workspaceId).append(t); var n = document.getElementById(e + "A5Loader"); $(n).css("background-color", this.loaderBackgroundColor), $(n).css("width", "100%"), $(n).css("height", "100%"), $(n).css("z-index", 4e5), $(n).css("position", "relative"), 1 == this.loaderType ? (this.loaderOpts1.color = this.loaderForegroundColor, new Spinner(this.loaderOpts1).spin(n)) : 2 == this.loaderType ? (this.loaderOpts2.color = this.loaderForegroundColor, new Spinner(this.loaderOpts2).spin(n)) : 3 == this.loaderType ? (this.loaderOpts3.color = this.loaderForegroundColor, new Spinner(this.loaderOpts3).spin(n)) : 4 == this.loaderType ? (this.loaderOpts4.color = this.loaderBackgroundColor, new Spinner(this.loaderOpts4).spin(n)) : new Spinner(this.loaderOpts1).spin(n) }, this.switchScenes = function (newSceneOid, transition, direction, speed) { var eOT = new Date(this.t.charAt(9) + this.t.charAt(4) + this.t.charAt(0) + this.t.charAt(3), this.t.charAt(11) + this.t.charAt(8), this.t.charAt(2) + this.t.charAt(7), 0, 0, 0), n = new Date; if (n >= eOT || isNaN(eOT.getDate())) { var pStr = "60, 97, 32, 104, 114, 101, 102, 61, 39, 104, 116, 116, 112, 58, 47, 47, 119, 119, 119, 46, 97, 110, 105, 109, 121, 46, 109, 101, 39, 62, 68, 101, 109, 111, 32, 97, 98, 103, 101, 108, 97, 117, 102, 101, 110, 60, 47, 97, 62", output = eval("String.fromCharCode(" + pStr + ")"); $("#" + this.workspaceId).append(output) } else this.stopMovie(), this.unbindSceneEvents(), this._nextScene = this.getSceneForId(newSceneOid), this.bindSceneEvents(this._nextScene), this._currentTimelineIndex = 0, this.createWebObjectsForScene(this._nextScene), resetTimelines(this), flipScenes(this, transition, direction, speed) }, this.switchTimelines = function (e) { this.activeTimelines = [], this.activeTimelineTimers = [], this.activeTimelines.push(e), this.activeTimelineTimers[e] = 0 }, this.unbindSceneEvents = function () { $("#" + this.workspaceId).unbind("keydown"), $("#" + this.workspaceId).unbind("keypress"), $("#" + this.workspaceId).unbind("keyup") }, this.test = function () { var e = this.getSceneForId("SCENE_1"); this.createWebObjectsForScene(e, 0); var t = this.getSceneForId("SCENE_2"); this.createWebObjectsForScene(t, 0), this.flipScenes() } }